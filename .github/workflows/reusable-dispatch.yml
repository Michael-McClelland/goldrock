name: reusable-dispatch
on:
  workflow_run:
    workflows: ["security-services"]
    types:
      - completed
env:
  ORGANIZATION_MANAGEMENT_ACCOUNT_ID: ${{ vars.MANAGEMENT_ACCOUNT_ID }}
  ORGANIZATION_IDENTIFIER: ${{ vars.ORGANIZATION_IDENTIFIER }}

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  setup:
    name: 'setup'
    runs-on: codebuild-goldrock-${{ github.run_id }}-${{ github.run_attempt }}

    defaults:
      run:
        shell: bash

    permissions:
      contents: read
      id-token: write

    outputs:
      account_ids: ${{steps.list_accounts.outputs.account_ids}}

    steps:
      - name: Authenticate with AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{env.ORGANIZATION_MANAGEMENT_ACCOUNT_ID}}:role/goldrock-github-actions
          aws-region: ${{ vars.HOME_REGION }}
          mask-aws-account-id: false

      - name: List accounts
        id: list_accounts
        run: |
          account_ids=$(aws organizations list-accounts --output text --query 'Accounts[*].Id')
          for account in $account_ids; do OUT+=$account; done
          echo "account_ids="$(echo $OUT | fold -w 252 |  jq -R . | jq -s . ) >> "$GITHUB_OUTPUT"
  global:
    name: 'global'
    uses: ./.github/workflows/reusable-fanout.yml
    with:
      accountbundle: ${{ matrix.accountbundle }}
      workflow: 'global'
      workingdirectory: './global/'
      additionalregions: 'false'
      home_region: ${{ vars.HOME_REGION }}
      deployhomeregion: 'true'
    needs: setup
    permissions:
      contents: read
      id-token: write
    strategy:
      max-parallel: 10
      fail-fast: false
      matrix:
        accountbundle: ${{fromJson(needs.setup.outputs.account_ids)}}
  regional:
    name: 'home_region'
    uses: ./.github/workflows/reusable-fanout.yml
    with:
      accountbundle: ${{ matrix.accountbundle }}
      workflow: 'home_region'
      workingdirectory: './regional/home_region/'
      additionalregions: 'false'
      home_region: ${{ vars.HOME_REGION }}
      deployhomeregion: 'true'
    needs: [setup, global]
    permissions:
      contents: read
      id-token: write
    strategy:
      max-parallel: 10
      fail-fast: false
      matrix:
        accountbundle: ${{fromJson(needs.setup.outputs.account_ids)}}
  additional_regions:
    name: 'additional_regions'
    uses: ./.github/workflows/reusable-fanout.yml
    with:
      accountbundle: ${{ matrix.accountbundle }}
      workflow: 'additional_regions'
      workingdirectory: './regional/additional_regions/'
      additionalregions: 'true'
      home_region: ${{ vars.HOME_REGION }}
      deployhomeregion: 'false'
    needs: [setup, global, regional ]
    permissions:
      contents: read
      id-token: write
    strategy:
      max-parallel: 10
      fail-fast: false
      matrix:
        accountbundle: ${{fromJson(needs.setup.outputs.account_ids)}}

#TODO need to pass regions instead of additional regions